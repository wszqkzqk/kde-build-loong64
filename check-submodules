#!/bin/bash

. common

in_array() {
	local needle=$1; shift
	[ -z "$1" ] && return 1 # Not Found
	local item
	for item in "$@"; do
		[ "$item" = "$needle" ] && return 0 # Found
	done
	return 1 # Not Found
}

getSubModules() {
	grep -v '^\W*#' "$1" \
	| grep -o 'add_subdirectory([^)]*' \
	| sed -e 's/add_subdirectory(//' \
	| grep -v -e 'doc' -e 'cmake' \
	| sort -u \
	| tr [:upper:] [:lower:]
}

checkSrcDir() {
	if [ "$2" == 'kdeplasma-addons' ]; then
		for i in $(getSubModules $1/CMakeLists.txt); do
			for j in $(getSubModules $1/$i/CMakeLists.txt); do
				echo "$(basename $i)-$j"
			done
		done
	fi

	getSubModules $1/CMakeLists.txt
}

for i in ${depPkgName} ${optPkgName}; do
	_pushd build/${i}/${svnbranch}
		unset pkgname
		unset pkgbase
		unset subdirs
		unset srcdir
		. PKGBUILD
		[ "$pkgbase" == "" ] && pkgbase=$pkgname
		srcdir=src/$pkgbase-$pkgver/
		
		if [[ ! -d ${srcdir} ]]; then
			if [ -f ${SRCDEST}/${pkgbase}-${version}.tar.xz ]; then
				[ ! -d src ] && mkdir src
				tar -xjf ${SRCDEST}/${pkgbase}-${version}.tar.xz -C src/
			else
				echo "source tarball for $pkgbase not found!"
				exit 1
			fi
		fi

		[ "$pkgbase" == 'kdebase' ] && srcdir=$srcdir/apps

 		subdirs=($(checkSrcDir $srcdir $pkgbase))

		for j in ${pkgname[@]}; do
			if in_array "${j#${pkgbase}-}" ${subdirs[@]}; then
				continue
			else
				echo -e "(removed)\t${pkgbase}:\t${j#${pkgbase}-}"
			fi
		done

		for j in ${subdirs[@]}; do
			if in_array "${pkgbase}-${j}" ${pkgname[@]}; then
				continue
			else
				echo -e "(new)\t\t${pkgbase}:\t${j}"
			fi
		done
	_popd
done
