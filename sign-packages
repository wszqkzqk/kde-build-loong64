#!/bin/bash

server="pkgbuild.com"

. common

checkIntegrity() {
	if [ "$(sha1sum "${1}" | cut -d' ' -f1)" != "$(ssh ${server} sha1sum "${2}" | cut -d' ' -f1)" ]; then
		return 1
	else
		return 0
	fi
}

echo "Downloading packages from $server..."
for i in ${depPkgName} ${optPkgName}; do
       _pushd build/${i}
	unset pkgname pkgver pkgrel arch
	. PKGBUILD
	for a in ${arch[@]}; do
		for j in ${pkgname[@]}; do
			if [ ! -f ${j}-${pkgver}-${pkgrel}-${a}${PKGEXT} ]; then
                               scp ${server}:"~/packages/${i}/${j}-${pkgver}-${pkgrel}-${a}${PKGEXT}" .
			fi

			if [ -f ${j}-${pkgver}-${pkgrel}-${a}${PKGEXT} ]; then
				echo "Checking ${j} ${a} integrity..."
                               if ! checkIntegrity ${j}-${pkgver}-${pkgrel}-${a}${PKGEXT} "~/packages/${i}/${j}-${pkgver}-${pkgrel}-${a}${PKGEXT}"; then
					echo "ERROR: ${j} ${a} corrupted"
					rm ${j}-${pkgver}-${pkgrel}-${a}${PKGEXT} ${j}-${pkgver}-${pkgrel}-${a}${PKGEXT}.sig &> /dev/null
					exit 1
				fi

				if [ ! -f ${j}-${pkgver}-${pkgrel}-${a}${PKGEXT}.sig ]; then
					echo "Signing and uploading signatures..."
					gpg --detach-sign --use-agent ${j}-${pkgver}-${pkgrel}-${a}${PKGEXT}
                                       scp ${j}-${pkgver}-${pkgrel}-${a}${PKGEXT}.sig ${server}:"~/packages/${i}/"
				fi
			else
				echo "WARNING: ${j} ${a} not found"
			fi
		done
	done
	_popd
done
